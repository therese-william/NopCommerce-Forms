@model Nop.Web.Models.Catalog.VendorLocatorModel

<link href="~/Content/kendo/2014.1.318/kendo.default.min.css" rel="stylesheet" />
<link href="~/Content/kendo/2014.1.318/kendo.common.min.css" rel="stylesheet" />
<link href="~/Content/jquery-ui-themes/smoothness/jquery-ui-1.10.3.custom.min.css" rel="stylesheet" />

<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false"></script>
<script src="~/Scripts/kendo/2014.1.318/kendo.web.min.js"></script>

<script type="text/javascript">

    var allCities = [
            @for (int i = 0; i < Model.AvailableCities.Count; i++)
    {
        var cityItem = Model.AvailableCities[i];
        <text>
    {
        Id: @(cityItem.Value),
        Name: "@(Html.Raw(HttpUtility.JavaScriptStringEncode(cityItem.Text)))"
    }
    </text>
        if (i != Model.AvailableCities.Count - 1)
        {
            <text>,</text>
        }
    }
    ];

    var markers = [
        @for (int i = 0; i < Model.SelectedVendors.Count; i++)
    {
        var vendorItem = Model.SelectedVendors[i];
        <text>
        {
            title: "@(Html.Raw(HttpUtility.JavaScriptStringEncode(vendorItem.Name)))",
            lat: @(vendorItem.Latitude.Value),
            lng: @(vendorItem.Longitude.Value),
            description: "@(Html.Raw(HttpUtility.JavaScriptStringEncode(vendorItem.Name + "<br/>" + vendorItem.FullAddress )))",
            label:  "@(Html.Raw(i))"
        }
        </text>
        if (i != Model.SelectedVendors.Count - 1)
        {
            <text>,</text>
        }
    }
    ];

    $(document).ready(function () {
        var selectedCityId = @(Model.SelectedCityId == null ? 0 : Model.SelectedCityId);
        if(selectedCityId == 0){
            selectedCityId = null;
        }

        var viewModel = kendo.observable({
            selectedCityId: selectedCityId,
            cities: allCities
        });

        $("#SelectedCityId").kendoComboBox({
            valuePrimitive: true,
            autoBind: false,
            dataSource: allCities,
            filter: "contains",
            minLength: 2,
            placeholder: "Enter suburb or postcode ...",
            dataTextField: "Name",
            dataValueField: "Id"
        });

        kendo.bind($("#SelectedCityId"), viewModel);

        if(markers.length > 0){
            var mapOptions = {
                center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                zoom: 13,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            var infoWindow = new google.maps.InfoWindow();
            var map = new google.maps.Map(document.getElementById("DealersMap"), mapOptions);
            for (i = 0; i < markers.length; i++) {
                var data = markers[i]
                var myLatlng = new google.maps.LatLng(data.lat, data.lng);
                var marker = new google.maps.Marker({
                    position: myLatlng,
                    map: map,
                    title: data.title,
                    label: data.label
                });
                (function (marker, data) {
                    google.maps.event.addListener(marker, "click", function (e) {
                        infoWindow.setContent(data.description);
                        infoWindow.open(map, marker);
                    });
                })(marker, data);
            }
        }

    });
</script>
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.DealerLocator").Text);
}
<div class="container">
    <div class="panel panel-default form-panel">


        <div class="panel-heading">
            <h3>@T("PageTitle.DealerLocator")</h3>
        </div>

        <div class="panel-body">
            @using (Html.BeginForm())
            {
                <input id="SelectedCityId" name="SelectedCityId" type="text" style="width:100%;" data-bind="value: selectedCityId, source: cities" required /><br />
                <br />
                <input type="submit" name="find-dealers" class="button-1" value="Find Dealers" />
            }
            <br />
            <br />
            <div class="row">
                <div class="col-md-9">
                    <div id="DealersMap" style="margin:0 auto; width:100%; height:500px;"></div>
                </div>
                <div class="col-md-3">
                    @if (Model.SelectedVendors.Count > 0)
                    {
                        int i = 0;
                        foreach (var vendor in Model.SelectedVendors)
                        {
                            if (i == 10) { break; }
                            var citycoord = new System.Device.Location.GeoCoordinate(Model.SelectedCity.Latitude.Value, Model.SelectedCity.Longitude.Value);
                            
                            <div>
                                <b>@i.ToString() - <a href="@Url.RouteUrl("Vendor", new { SeName = vendor.SeName })">@vendor.Name</a>
                                </b><br />
                                Address: @vendor.FullAddress <br />
                                Distance: @Html.Raw((citycoord.GetDistanceTo(new System.Device.Location.GeoCoordinate(vendor.Latitude.Value, vendor.Longitude.Value))/1000).ToString("F2")) KMs
                            </div>
                            <hr />
                            i++;
                        }
                    }
                </div>
            </div>

        </div>

    </div>
</div>