/*
 * 	 styleSelect - apply style to a select box
 *   (http://www.8stream.com/blog/entry/styleselect)
 *
 * 	 Copyright (c) 2010 Siim Sindonen, <siim@8stream.com>
 *   Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 * 
 *   Requires jQuery version: >= 1.3.2
 * 	 Version: 2.0.0 | 15.10.2010
 */

(function (a) { function p(e, h) { a("." + e).each(function () { var c = a(this).find(".styleSelect_item"); a(this).find("span").each(function () { var c = a(this).attr("class"); "passiveSelect" != c && "activeSelect" != c || a(this).remove() }); var f = a(this).find(".selected"); a("<span></span>").text(f.text()).attr("id", f.parent().attr("id")).addClass("passiveSelect").appendTo(a(this)); 0 === h && a(this).css({ width: c.width() }) }); a("." + e + " span").each(function () { a(this).attr("id") && (a(this).removeClass(), a(this).addClass("activeSelect")) }) } a.fn.styleSelect = function (e) { if (!a.isMobile()) { var h = 1, c = a.extend({}, a.fn.styleSelect.defaults, e); a("input,select,textarea,button").each(function () { var c = a(this); c.attr("tabindex") || (c.attr("tabindex", h), h++) }); return this.each(function () { mainSelect = a(this); var f = mainSelect.attr("name"), e = f.replace(/\[.*\]/, ""), g = mainSelect.attr("tabindex"), d = "selectbox_" + e + (new Date).getTime(); mainSelect.hide(); e = a('<div tabindex="' + g + '"></div>').css({ position: "relative", "z-index": parseInt(1E3 - g) }).addClass(c.styleClass).attr("id", d).insertBefore(mainSelect); a('<div class="styleSelect_item"></div>').appendTo(e).css({ position: "absolute", "z-index": "" + parseInt(500 - g) + "", top: c.optionsTop, left: c.optionsLeft }).hide(); a('<div class="styleSelect_item_content"></div>').appendTo(a("#" + d + " .styleSelect_item")); var g = a("<ul></ul>").appendTo(a("#" + d + " .styleSelect_item_content")), b = ""; mainSelect.find("option").each(function () { b += '<li id="' + a(this).val() + '"'; a(this).attr("class") && (b += ' class="' + a(this).attr("class") + '" '); b += ">"; b += '<span style="display: block;"'; a(this).attr("selected") && (b += ' class="selected" '); b += ">"; b += a(this).text(); b += "</span>"; b += "</li>" }); g.append(b); p(c.styleClass, c.optionsWidth); a("#" + d).click(function (b) { a(".styleSelect_item").hide(); a(b.target).parents(".jspVerticalBar").attr("class") || a(this).find(".styleSelect_item").slideToggle(c.speed, function () { if ("none" != a(this).css("display") && 1 == c.jScrollPane) { a(this).find(".styleSelect_item_content").jScrollPane(c.jScrollPaneOptions); var b = a(".styleSelect_item_content").data("jsp"), m = a(".styleSelect_item_content").height(), d = a(".styleSelect_item_content .selected").position(); d.top && null != b && d.top > m ? b.scrollTo(0, parseInt(d.top - m / 2)) : d.top && d.top < m ? b.scrollTo(0, parseInt(d.top - m)) : null != b && b.scrollTo(0, 0) } }) }); a("#" + d + " li").click(function () { h(a(this)) }); a("#" + d).keydown(function (b) { var l = a(this).find(".selected").parent(); if (1 == c.jScrollPane) var e = a(".styleSelect_item_content").data("jsp"), f = a(".styleSelect_item_content").height(); if (40 == b.keyCode || 39 == b.keyCode) { var k = l.next(); if (0 < k.index() && null != e && "none" != a("#" + d).find(".styleSelect_item").css("display")) { var g = k.position(); null != g.top && g.top > f && e.scrollTo(0, parseInt(g.top)) } h(k) } if (37 == b.keyCode || 38 == b.keyCode) l = l.prev(), k = l.index(), null != e && 1 == c.jScrollPane && "none" != a("#" + d).find(".styleSelect_item").css("display") && (0 < k ? (k = l.position(), k.top - f < f && e.scrollTo(0, parseInt(k.top))) : e.scrollTo(0, 0)), h(l); if (13 == b.keyCode || 0 == b.keyCode || 32 == b.keyCode) return a(this).find(".styleSelect_item").slideToggle(c.speed, function () { a(b.target).find(".jspContainer").attr("class") || 1 != c.jScrollPane || a(this).find(".styleSelect_item_content").jScrollPane(c.jScrollPaneOptions) }), !1; 9 == b.keyCode && a(this).find(".styleSelect_item").hide(c.speed) }); var h = function (b) { b.siblings().find("span").removeClass("selected"); b.find("span").addClass("selected"); b = b.attr("id"); var d = a('select[name="' + f + '"]'); d.siblings().selected = !1; d.find('option[value="' + b + '"]').attr("selected", "selected"); d.trigger(c.selectTrigger); p(c.styleClass, c.optionsWidth) }, n = !1; a("#" + d).click(function (b) { n ? (a("#" + d + " .styleSelect_item").hide(), n = !1) : (b.stopPropagation(), n = !0) }); a(document).click(function () { a("#" + d + " .styleSelect_item").hide() }) }) } }; a.fn.styleSelect.defaults = { optionsTop: "26px", optionsLeft: "0px", optionsWidth: 0, styleClass: "selectMenu", speed: 0, selectTrigger: "change", jScrollPane: 0, jScrollPaneOptions: "" } })(jQuery);