@model SubmitReturnRequestModel
@using Nop.Web.Models.Order;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.ReturnItems").Text);
}
<div class="page-header marginTop0">
    <h2 class="marginTop0 text-center">@string.Format(T("ReturnRequests.Title").Text, Model.OrderId)</h2>
</div>
<div class="page-body">
    @if (!String.IsNullOrEmpty(Model.Result))
    {
            <div class="alert alert-success" role="alert">
                @Model.Result
            </div>
    }
    else
    {
        using (Html.BeginForm())
        {
                <div class="page-header marginTop0">
                    <h3 class="marginTop0 text-center">@string.Format(T("ReturnRequests.SelectProduct(s)").Text, Model.OrderId)</h3>
                </div>
                    <table class="table table-bordered table-responsive table-striped">
                        <colgroup>
                            <col />
                            <col width="10%" />
                            <col width="10%" />
                        </colgroup>
                        <thead>
                            <tr class="active">
                                <th>
                                    @T("ReturnRequests.Products.Name")
                                </th>
                                <th >
                                    @T("ReturnRequests.Products.Price")
                                </th>
                                <th>
                                    @T("ReturnRequests.Products.Quantity")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td class="product">
                                        <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                        @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                        {
                                            <div>
                                                @Html.Raw(item.AttributeInfo)
                                            </div>
                                        }
                                    </td>
                                    <td class="unit-price">
                                        @item.UnitPrice
                                    </td>
                                    <td class="quantity">
                                        <select name="quantity@(item.Id)" class="form-control">
                                            @for (int i = 0; i <= item.Quantity; i++)
                                            {
                                                <option value="@(i)">@(i)</option>
                                            }
                                        </select>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

            <div class="form-horizontal">
                <div class="page-header">
                    <h3 class="marginTop0">@T("ReturnRequests.WhyReturning")</h3>
                </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ReturnReason, new {@class= "col-sm-2 control-label" }, ":")
                        <div class="col-sm-4">
                            @Html.DropDownListFor(model => model.ReturnReason, Model.AvailableReturnReasons, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ReturnAction, new {@class= "col-md-2 control-label" }, ":")
                       <div class="col-sm-4">
                            @Html.DropDownListFor(model => model.ReturnAction, Model.AvailableReturnActions, new { @class = "form-control" })
                       </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Comments, new { @class = "col-sm-2 control-label" }, ":")
                        <div class="col-sm-4">
                            @Html.TextAreaFor(model => model.Comments, new { @class = "form-control", rows = "5" })
                            @Html.ValidationMessageFor(model => model.Comments)
                        </div>                     
                    </div>
            </div>
            <div class="row col-sm-offset-2 col-sm-4 text-right">
                <input type="submit" name="submit-return-request" class="btn btn-primary" value="@T("ReturnRequests.Submit")" />
            </div>
        }
    }
</div>
