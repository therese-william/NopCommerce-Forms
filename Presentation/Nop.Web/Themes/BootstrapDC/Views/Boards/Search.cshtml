@model SearchModel
@using Nop.Core.Domain.Forums;
@using Nop.Web.Models.Boards;
@using Nop.Web.Models.Common;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    Html.AddTitleParts(T("Forum.PageTitle.Search").Text);
}
<script type="text/javascript">
    $(document).ready(function () {
        toggleAdvancedSearch();
        $('#adv').click(function () {
            toggleAdvancedSearch();
        });
    });
    function toggleAdvancedSearch() {
        if ($('#adv').is(':checked')) {
            $('#advanced-search').show();
        }
        else {
            $('#advanced-search').hide();
        }
    }
</script>
@Html.Action("ForumBreadcrumb")
    <div class="page-header page-header-custom">
        <h3 class="text-center">@T("Forum.Search")</h3>
    </div>
    <div class="page-body">
            @using (Html.BeginRouteForm("Search", FormMethod.Get))
            {
                <div class="row">
                    <div class="col-sm-offset-2 col-sm-8">
                        <div class="form-horizontal">
                            <div class="basic-search">
                                <div class="form-group">
                                    <label class="col-sm-3">@T("Forum.Search.SearchKeyword")</label>
                                    <div class="col-sm-9">
                                        @Html.TextBox("searchterms", null, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-12">
                                        @Html.CheckBox("adv", Model.ShowAdvancedSearch)
                                        @Html.Label("adv", T("Forum.Search.AdvancedSearch").Text)
                                    </div> 
                                </div>
                            </div>
                            <div class="advanced-search" id="advanced-search" style="display: none;">
                                <div class="form-group">
                                    <label class="col-sm-3">@T("Forum.Search.SearchInForum")</label>
                                    <div class="col-sm-9">
                                        @Html.DropDownList("forumId", new SelectList(Model.ForumList, "Value", "Text", Model.ForumIdSelected), new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3">@T("Forum.Search.SearchWithin")</label>
                                    <div class="col-sm-9">
                                        @Html.DropDownList("within", new SelectList(Model.WithinList, "Value", "Text", Model.WithinSelected), new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3">@T("Forum.Search.LimitResultsToPrevious")</label>
                                    <div class="col-sm-9">
                                        @Html.DropDownList("limitDays", new SelectList(Model.LimitList, "Value", "Text", Model.LimitDaysSelected), new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="text-center">
                            <input type="submit" class="btn btn-primary" value="@T("Forum.SearchButton")" />
                        </div>
                    </div>
                    
                </div>               
            }
        <div class="text-danger">
            @Model.Error
        </div>
        <div class="search-results">
            @{
                var searchterms = Model.SearchTerms;
                string adv = null;
                string within = null;
                string limitDays = null;
                string forumId = null;

                if (Model.ShowAdvancedSearch)
                {
                    adv = "true";
                    within = Model.WithinSelected.ToString();
                    limitDays = Model.LimitDaysSelected.ToString();
                    forumId = Model.ForumIdSelected.ToString();
                }

                var pager = Html.Pager(new PagerModel
                {
                    PageSize = Model.TopicPageSize,
                    TotalRecords = Model.TopicTotalRecords,
                    PageIndex = Model.TopicPageIndex,
                    ShowTotalSummary = false,
                    RouteActionName = "Search",
                    RouteValues = new ForumSearchRouteValues { adv = adv, searchterms = searchterms, forumId = forumId, within = within, limitDays = limitDays },
                });
            }
            @if (!MvcHtmlString.IsNullOrEmpty(pager))
            {
                <div class="pager pagerForum">
                    @pager
                </div>
            }
            @if (Model.NoResultsVisisble)
            {
                <div>
                    @T("Forum.SearchNoResultsText")
                </div>
            }
            <div class="forums-table-section topic-group">
                @if (Model.SearchResultsVisible)
                {
                        <table class="table table-bordered table-responsive">
                            <colgroup>
                                <col width="1" />
                                <col />
                                <col width="1" />
                                <col width="1" />
                                <col width="10%" />
                            </colgroup>
                            <thead>
                                <tr class="active">
                                    <th class="topic-details" colspan="2">
                                        @T("Forum.TopicTitle")
                                    </th>
                                    <th class="replies">
                                        <span class="hidden-xs">@T("Forum.Replies")</span>
                                        <i class="visible-xs fa fa-reply-all tooltipOn" data-toggle="tooltip" title="@T("Forum.Replies")"></i>
                                    </th>
                                    <th class="views">
                                        <span class="hidden-xs">@T("Forum.Views")</span>
                                        <i class="visible-xs fa fa-eye tooltipOn" data-toggle="tooltip" title="@T("Forum.Views")"></i>
                                    </th>
                                    <th class="latest-post">
                                        @T("Forum.LatestPost")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var topic in @Model.ForumTopics)
                                {
                                    var topicType = "post";
                                    var topicText = String.Empty;
                                    switch (topic.ForumTopicType)
                                    {
                                        case ForumTopicType.Normal:
                                            topicType = "post";
                                            break;
                                        case ForumTopicType.Sticky:
                                            topicType = "sticky";
                                            topicText = string.Format("[{0}]", T("Forum.Sticky"));
                                            break;
                                        case ForumTopicType.Announcement:
                                            topicType = "announcement";
                                            topicText = string.Format("[{0}]", T("Forum.Announcement"));
                                            break;
                                        default:
                                            topicType = "post";
                                            break;
                                    }
                                    <tr>
                                        <td class="image">
                                            <div class="@topicType"></div>
                                        </td>
                                        <td class="topic-details">
                                            <div class="marginBottom10">
                                                @Html.RouteLink(topic.Subject, "TopicSlug", new { id = topic.Id, slug = topic.SeName })
                                                @if (!String.IsNullOrEmpty(topicText))
                                                {
                                                    <span class="topic-type">@topicText</span>
                                                }
                                            </div>
                                            @if (topic.NumPosts > Model.PostsPageSize)
                                            {
                                                <div class="small">
                                                    @Html.ForumTopicSmallPager(topic)
                                                </div>
                                            }
                                            <div class="small">
                                                @if (topic.CustomerId > 0)
                                                {
                                                    <label>@T("Forum.Author"):</label>
                                                    if (topic.AllowViewingProfiles && !topic.IsCustomerGuest)
                                                    {
                                                        @Html.RouteLink(topic.CustomerName, "CustomerProfile", new { Id = topic.CustomerId })
                                                    }
                                                    else
                                                    {
                                                        @topic.CustomerName
                                                    }
                                                }
                                            </div>
                                        </td>
                                        <td class="replies">
                                            @topic.NumReplies
                                        </td>
                                        <td class="views">
                                            @topic.Views
                                        </td>
                                        <td class="small">
                                            @Html.Action("LastPost", new { forumPostId = topic.LastPostId, showTopic = false })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                }
            </div>
            @if (!MvcHtmlString.IsNullOrEmpty(pager))
            {
                <div class="pager pagerForum">
                    @pager
                </div>
            }
        </div>
    </div>
