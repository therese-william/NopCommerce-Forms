@model EditForumTopicModel
@using Nop.Core.Domain.Forums;
@using Nop.Web.Models.Boards;

@Html.Action("ForumBreadcrumb", new { forumId = Model.ForumId, forumTopicId = Model.Id })
<div class="page forum-edit-page">
    <div class="page-header page-header-custom">
        @if (Model.IsEdit)
        {
            <h3 class="text-center">@T("Forum.EditTopic")</h3>
        }
        else
        {
            <h3 class="text-center">@T("Forum.NewTopic")</h3>
        }
    </div>
    <div class="page-body">
        @using (Html.BeginForm())
        {
            var validationSummary = Html.ValidationSummary(true);
            if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
            {
                <div class="text-danger">@validationSummary</div>
            }
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ForumId)
            <div class="row">
                <div class="col-sm-offset-2 col-sm-8">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-2">@T("Forum.ForumName"):</label>
                            <div class="col-sm-10">@Model.ForumName</div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2">@T("Forum.TopicTitle"):</label>
                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Subject, new { @class = "form-control" })
                                <small class="text-danger">@Html.ValidationMessageFor(model => model.Subject)</small>
                            </div>

                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @if (Model.ForumEditor == EditorType.BBCodeEditor)
                                {
                                    @Html.BBCodeEditor("Text")
                                }
                                @Html.TextAreaFor(model => model.Text, new { @class = "form-control", rows = "10", TextMode = "MultiLine" })
                                <small class="text-danger">@Html.ValidationMessageFor(model => model.Text)</small>
                            </div>

                        </div>
                        @if (Model.IsCustomerAllowedToSetTopicPriority)
                {
                            <div class="form-group">
                                <label class="col-sm-2">@T("Forum.Priority"):</label>
                                <div class="col-sm-3">
                                    @Html.DropDownList("TopicTypeId", new SelectList(Model.TopicPriorities, "Value", "Text", Model.TopicTypeId), new { @class = "form-control" })
                                </div>
                            </div>
                        }
                        @if (Model.IsCustomerAllowedToSubscribe)
                {
                            <div class="form-group">
                                <div class="col-sm-12">
                                    @Html.EditorFor(model => model.Subscribed)
                                    <label>@T("Forum.NotifyWhenSomeonePostsInThisTopic")</label>
                                </div>

                            </div>
                        }
                    </div>
                    <div class="text-center">
                        <input type="submit" value="@T("Forum.Submit")" class="btn btn-primary" />
                        <input type="button" class="btn btn-default" value="@T("Forum.Cancel")" onclick="setLocation('@Url.RouteUrl("ForumSlug", new { id = Model.ForumId, slug = Model.ForumSeName })')" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>
   
