@model CheckoutBillingAddressModel
@using Nop.Web.Models.Checkout;
<div class="checkout-data">
    @Html.Widget("op_checkout_billing_address_top")
    @if (Model.ExistingAddresses.Count > 0)
    {
        <p class="text-center">
            <label for="billing-address-select">@T("Checkout.SelectBillingAddressOrEnterNewOne")</label>
        </p>
        <select name="billing_address_id" id="billing-address-select" class="form-control"
                title="" onchange="Billing.newAddress(!this.value)">
            @foreach (var address in Model.ExistingAddresses)
            {
                var addressLine = "";
                addressLine += address.FirstName;
                addressLine += " " + address.LastName;
                if (address.StreetAddressEnabled && !String.IsNullOrEmpty(address.Address1))
                {
                    addressLine += ", " + address.Address1;
                }
                if (address.CityEnabled && !String.IsNullOrEmpty(address.City))
                {
                    addressLine += ", " + address.City;
                }
                if (address.StateProvinceEnabled && !String.IsNullOrEmpty(address.StateProvinceName))
                {
                    addressLine += ", " + address.StateProvinceName;
                }
                if (address.ZipPostalCodeEnabled && !String.IsNullOrEmpty(address.ZipPostalCode))
                {
                    addressLine += " " + address.ZipPostalCode;
                }
                if (address.CountryEnabled && !String.IsNullOrWhiteSpace(address.CountryName))
                {
                    addressLine += ", " + address.CountryName;
                }
                //how should we render "FormattedCustomAddressAttributes" here?
                <option value="@(address.Id)">@(addressLine)</option>
            }
            <option value="" selected="@Model.NewAddressPreselected">@T("Checkout.NewAddress")</option>
        </select>
    }
    @Html.Widget("op_checkout_billing_address_middle")
    <div class="marginTop15" id="billing-new-address-form">
        @{
            var validationSummary = Html.ValidationSummary(true);
        }
        @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
            {
            <div class="text-danger">@validationSummary</div>
        }
        @{
            var dataDictAddress = new ViewDataDictionary();
            //Merge ModelState (required for validation)
            dataDictAddress.ModelState.Merge(ViewData.ModelState);
            dataDictAddress.TemplateInfo.HtmlFieldPrefix = "BillingNewAddress";
            @Html.Partial("_CreateOrUpdateAddress", Model.NewAddress, dataDictAddress)
        }
    </div>
    @Html.Widget("op_checkout_billing_address_bottom")
</div>
