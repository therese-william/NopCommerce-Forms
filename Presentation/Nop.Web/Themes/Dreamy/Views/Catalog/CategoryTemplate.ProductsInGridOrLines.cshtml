@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@*category breadcrumb*@
@section Breadcrumb
{
    @if (Model.DisplayCategoryBreadcrumb)
    {
        <div class="container">
            <ol class="breadcrumb">
                <li>
                    <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                </li>
                @foreach (var cat in Model.CategoryBreadcrumb)
                {
                    var isLastCategory = cat.Id == Model.Id;
                    <li>
                        @if (isLastCategory)
                        {
                            <strong class="current-item">@cat.Name</strong>
                        }
                        else
                        {
                            <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                        }
                    </li>
                }
            </ol>
            @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
        </div>
    }
}
<div class="page-header page-header-custom">
    <h3 class="text-center">@Model.Name</h3>
</div>
<div class="page-body">
    @Html.Widget("categorydetails_top", Model.Id)
    @*description*@
    @if (!String.IsNullOrWhiteSpace(Model.Description))
    {
        <div class="page-description">
            @Html.Raw(Model.Description)
        </div>
    }
    @Html.Widget("categorydetails_before_subcategories", Model.Id)
    @*subcategories*@
    @if (Model.SubCategories.Count > 0)
    {
        <div class="row text-center">
            @foreach (var item in Model.SubCategories)
                {
                <div class="col-xs-12 col-sm-6 col-md-4">
                    <div class="thumbnail">
                        <div class="caption">
                            <h4>
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                    @item.Name
                                </a>
                            </h4>
                        </div>
                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                            <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" class="img-responsive img-rounded" />
                        </a>
                    </div>
                </div>
            }
        </div>
    }
    @Html.Widget("categorydetails_before_featured_products", Model.Id)
    @*featured products*@
    @if (Model.FeaturedProducts.Count > 0)
    {
        <div class="row">
            <div class="col-md-12 text-center">
                <h2>@T("Products.FeaturedProducts")</h2>
            </div>
        </div>
        <div class="row text-center">
            @foreach (var item in Model.FeaturedProducts)
                {
                <div class="col-xs-12 col-sm-6 col-md-3">
                    @Html.Partial("_ProductBox", item)
                </div>
            }
        </div>
    }
    @Html.Widget("categorydetails_after_featured_products", Model.Id)
    @if (Model.Products.Count > 0)
    {
        @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
    }
    @Html.Widget("categorydetails_before_filters", Model.Id)
    <div class="row borderBottom marginBottom15 paddingLeft20">
        @*filtering*@
        @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
            {
            <div class="col-md-3">
                @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
            </div>
        }
        @*filtering*@
        @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
            {
            <div class="col-md-9">
                @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
            </div>
        }
    </div>
    @Html.Widget("categorydetails_before_product_list", Model.Id)

    @if (Model.Products.Count > 0)
    {
        <div class="row">
            @foreach (var product in Model.Products)
            {               
                if (Model.PagingFilteringContext.ViewMode == "list")
                {
                    <div class="col-xs-12">
                        @Html.Partial("_ProductBoxList", product)
                    </div>
                }
                else
                {
                    <div class="col-xs-12 col-sm-6 col-md-4">
                        @Html.Partial("_ProductBox", product)
                    </div>
                }
            }
        </div>
    }
    @{
        var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
    }
    @if (!pager.IsEmpty())
    {
        <div class="pager">
            @pager
        </div>
    }
    @Html.Widget("categorydetails_bottom", Model.Id)
</div>

