@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart;
@{
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
}
<div class="order-summary-content">
    @Html.Widget("order_summary_content_before")
    @Html.Partial("_OrderReviewData", Model.OrderReviewData)
    @if (Model.Items.Count > 0)
    {
        if (Model.Warnings.Count > 0)
        {
            <div class="text-danger">
                <ul>
                    @foreach (var warning in Model.Warnings)
                    {
                        <li>@warning</li>
                    }
                </ul>
            </div>
        }
        @*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
    using (Html.BeginRouteForm("ShoppingCart", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <table class="table table-bordered table-responsive table-striped">
            <colgroup>
                @if (Model.IsEditable)
                {
                    <col width="1" />
                }
                @if (Model.ShowSku)
                {
                    <col width="1" />
                }
                @if (Model.ShowProductImages)
                {
                    <col width="1" class="hidden-xs" />
                }
                <col />
                <col width="1" />
                <col width="1" />
                <col width="1" />
            </colgroup>
            <thead>
                <tr>
                    @if (Model.IsEditable)
                    {
                        <th class="remove-from-cart">
                            <span class="hidden-xs">@T("ShoppingCart.Remove")</span>
                            <i class="glyphicon glyphicon-trash text-danger visible-xs"></i>
                        </th>
                    }
                    @if (Model.ShowSku)
                    {
                        <th class="sku">
                            @T("ShoppingCart.SKU")
                        </th>
                    }
                    @if (Model.ShowProductImages)
                    {
                        <th class="hidden-xs">
                            @T("ShoppingCart.Image")
                        </th>
                    }
                    <th class="product">
                        @T("ShoppingCart.Product(s)")
                    </th>
                    <th class="unit-price">
                        @T("ShoppingCart.UnitPrice")
                    </th>
                    <th class="quantity">
                        @T("ShoppingCart.Quantity")
                    </th>
                    <th class="subtotal">
                        @T("ShoppingCart.ItemTotal")
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr>
                        @if (Model.IsEditable)
                        {
                            <td class="remove-from-cart">
                                @*<label class="td-title">@T("ShoppingCart.Remove"):</label>*@
                                <input type="checkbox" name="removefromcart" value="@(item.Id)" />
                            </td>
                        }
                        @if (Model.ShowSku)
                        {
                            <td class="sku">
                                @*<label class="td-title">@T("ShoppingCart.SKU"):</label>*@
                                <span class="sku-number">@item.Sku</span>
                            </td>
                        }
                        @if (Model.ShowProductImages)
                        {
                            <td class="hidden-xs">
                                <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
                            </td>
                        }
                        <td class="product">
                            <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                            @if (!String.IsNullOrEmpty(item.AttributeInfo))
                            {
                                <div class="">
                                    @Html.Raw(item.AttributeInfo)
                                </div>
                            }
                            @if (!String.IsNullOrEmpty(item.RecurringInfo))
                            {
                                <div class="recurring-info">
                                    @Html.Raw(item.RecurringInfo)
                                </div>
                            }
                            @if (!String.IsNullOrEmpty(item.RentalInfo))
                            {
                                <div class="rental-info">
                                    @Html.Raw(item.RentalInfo)
                                </div>
                            }
                            @if (Model.IsEditable && item.AllowItemEditing)
                            {
                                var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                                editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);
                                <div class="edit-item">
                                    <a href="@editCartItemUrl">@T("Common.Edit")</a>
                                </div>
                            }
                            @if (item.Warnings.Count > 0)
                            {
                                <div class="text-danger">
                                    <ul>
                                        @foreach (var warning in item.Warnings)
                                        {
                                            <li>@warning</li>
                                        }
                                    </ul>
                                </div>
                            }
                        </td>
                        <td class="unit-price">
                            @*<label class="td-title">@T("ShoppingCart.UnitPrice"):</label>*@
                            <span class="product-unit-price">@item.UnitPrice</span>
                        </td>
                        <td class="minWidth50" style="">
                            @*<label class="td-title">@T("ShoppingCart.Quantity"):</label>*@
                            @if (Model.IsEditable)
                            {
                                if (item.AllowedQuantities.Count > 0)
                                {
                                    <select name="itemquantity@(item.Id)" class="form-control">
                                        @foreach (var qty in item.AllowedQuantities)
                                        {
                                            <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                        }
                                    </select>
                                }
                                else
                                {
                                    <input name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="form-control minWidth50" />
                                }

                            }
                            else
                            {
                                <span class="product-quantity">@item.Quantity</span>
                            }
                        </td>
                        <td class="subtotal">
                            @*<label class="td-title">@T("ShoppingCart.ItemTotal"):</label>*@
                            <span class="product-subtotal">@item.SubTotal</span>
                            @if (!String.IsNullOrEmpty(item.Discount))
                            {
                                <div class="discount">
                                    @T("ShoppingCart.ItemYouSave"): @item.Discount
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="borderBottom">
            @if (Model.IsEditable)
            {
            <div class="marginTop10 row text-right">
                <input type="submit" name="updatecart" value="@T("ShoppingCart.UpdateCart")" class="btn btn-primary" />
                <input type="submit" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="btn btn-default" />
            </div>
            }
            <div class="row marginBottom10">
                <div class="col-sm-3">
                    @if (Model.IsEditable)
                    {
                    @Html.Partial("_CheckoutAttributes", Model.CheckoutAttributes, new ViewDataDictionary())
                    }
                    @if (!String.IsNullOrEmpty(Model.CheckoutAttributeInfo))
                    {
                        <div class="selected-checkout-attributes">
                            @Html.Raw(Model.CheckoutAttributeInfo)
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="cart-footer">
            @Html.Widget("order_summary_cart_footer")
            <div class="row">
                <div class="col-sm-6">
                    @if (Model.IsEditable)
                    {
                        @Html.Partial("_DiscountBox", Model.DiscountBox)
                        @Html.Partial("_GiftCardBox", Model.GiftCardBox)
                        @Html.Widget("order_summary_content_deals")
                        @Html.Partial("EstimateShipping", Model.EstimateShipping)
                    }
                </div>
                <div class="col-sm-5 col-sm-offset-1">
                    <div class="totals">
                        @Html.Action("OrderTotals", "ShoppingCart", new { isEditable = Model.IsEditable })
                        @if (Model.IsEditable)
                        {
                            if (!String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                            {
                                <div class="text-danger">
                                    @Model.MinOrderSubtotalWarning
                                </div>
                            }
                        }
                        @if (Model.IsEditable)
                        {
                            if (Model.TermsOfServiceOnShoppingCartPage)
                            {
                                <div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display:none;">
                                    <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-12">
                                        <div class="checkbox">
                                            <label>
                                                <input id="termsofservice" type="checkbox" name="termsofservice" />
                                                <span>@T("Checkout.TermsOfService.IAccept")<a class="read" onclick="javascript:OpenWindow('@Url.RouteUrl("TopicPopup", new { SystemName = "conditionsofuse" })', 450, 500, true)">@T("Checkout.TermsOfService.Read")</a></span>
                                            </label>
                                        </div>
                                    </div>   
                                </div>
                            }
                            <div class="checkout-buttons">
                                @if (String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                        {
                                    <script type="text/javascript">
                                $(document).ready(function () {
                                    $('#checkout').click(function () {
                                        //terms of service
                                        var termOfServiceOk = true;
                                        if ($('#termsofservice').length > 0) {
                                            //terms of service element exists
                                            if (!$('#termsofservice').is(':checked')) {
                                                $("#terms-of-service-warning-box").dialog();
                                                termOfServiceOk = false;
                                            } else {
                                                termOfServiceOk = true;
                                            }
                                        }
                                        return termOfServiceOk;
                                    });
                                });
                                    </script>
                                    <div class="text-right">
                                        <button type="submit" id="checkout" name="checkout" value="checkout" class="btn btn-primary">
                                            @T("Checkout.Button")
                                        </button>
                                    </div>
                                    
                                }
                            </div>
                            <div class="addon-buttons">
                                @*Payment method buttons (e.g. GoogleCheckoutButton, Paypal Express)*@
                                @Html.Partial("_ButtonPaymentMethod", Model)
                            </div>
                        }
                    </div>
                </div>
            </div>       
        </div>
        if (Model.IsEditable)
        {
            @Html.Action("CrossSellProducts", "Product")
        }
    }
 }
    else
    {
        <div class="minHeight250">
            @T("ShoppingCart.CartIsEmpty")
        </div>
    }
    @Html.Widget("order_summary_content_after")
</div>